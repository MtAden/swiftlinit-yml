disabled_rules: # rule identifiers to exclude from running
  - switch_case_alignment
  - conditional_returns_on_newline
  - discouraged_direct_init
  - explicit_acl
  - function_default_parameter_at_end
  - implicit_return
  - no_grouping_extension
  - object_literal - override_in_extension
  - pattern_matching_keywords
  - prefixed_toplevel_constant

opt_in_rules: # some rules are only opt-in
  - empty_count
  - syntactic_sugar
  - switch_case_on_newline
  - control_statement
  - empty_enum_arguments
  - redundant_discardable_let
  - generic_type_name
  - type_name
  - empty_parentheses_with_trailing_closure
  - force_cast
  - redundant_optional_initialization
  - control_statement
  - cyclomatic_complexity
  - comma
  - trailing_newline
  - class_delegate_protocol
  - unused_closure_parameter
  - identifier_name
  - closing_brace
  - anyobject_protocol
  - array_init
  - attributes
  - closure_end_indentation
  - closure_parameter_position
  - closure_spacing
  - compiler_protocol_init
  - convenience_type
  - discouraged_optional_boolean
  - discouraged_optional_collection
  - dynamic_inline
  - empty_enum_arguments
  - empty_parameters
  - empty_parentheses_with_trailing_closure
  - empty_string
  - empty_xctest_method
  - explicit_enum_raw_value
  - explicit_init
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - file_name
  - first_where
  - for_where
  - force_unwrapping
  - function_parameter_count
  - generic_type_name
  - implicit_getter
  - implicitly_unwrapped_optional
  - is_disjoint
  - joined_default_parameter
  - large_tuple
  - redundant_discardable_let
  - todo
  - trailing_comma
  - unneeded_break_in_switch
  - untyped_error_in_catch
  - unused_enumerated
  - valid_ibinspectable
  - yoda_condition


  # CG/NS Related 
  - legacy_cggeometry_functions
  - legacy_constant
  - legacy_constructor
  - legacy_nsgeometry_functions

  # Format related. 
  - let_var_whitespace
  - line_length
  - literal_expression_end_indentation
  - mark
  - missing_docs
  - number_separator
  - opening_brace
  - operator_usage_whitespace
  - operator_whitespace
  - no_fallthrough_only
  - leading_whitespace
  - sorted_imports
  - statement_position
  - trailing_semicolon
  - trailing_newline
  - trailing_whitespace
  - vertical_whitespace

  # Access Related 
 - lower_acl_than_parent
 - explicit_top_level_acl
 - modifier_order

 # Function/closure related 
  - multiline_arguments
  - multiline_function_chains
  - multiline_parameters
  - multiple_closures_with_trailing_closure
  - nesting
  - trailing_closure
  - type_body_length
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - unused_closure_parameter
  - vertical_parameter_alignment
  - vertical_parameter_alignment_on_call
  - void_return
  - redundant_void_return

  # Unit testing related
  - nimble_operator
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - single_test_class
  - xctfail_message

  - notification_center_detachment
  - redundant_string_enum_value
  - redundant_type_annotation

  - required_enum_case
  - return_arrow_whitespace
  - shorthand_operator
  - sorted_first_last

  # OO Related 
  - no_extension_access_modifier
  - overridden_super_call
  - private_action
  - private_outlet
  - private_over_fileprivate
  - private_unit_test
  - prohibited_super_call
  - protocol_property_accessors_order
  - redundant_set_access_control
  - strict_fileprivate
  - weak_delegate

  # Optional related 
  - redundant_nil_coalescing
  - redundant_optional_initialization
  - unused_optional_binding



# Find all the available rules by running:
# swiftlint rules
included: # paths to include during linting. `--path` is ignored if present.
  - ProjectFolder
  - ProjectFolderTests
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Carthage
  - Pods
  - fastlane
# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly

force_try:
  severity: error # explicitly

force_unwrapping: 
  severity: error # explicitly

implicit_getter:
  severity: error # explicitly

large_tuple: 
  severity: error # explicitly

legacy_cggeometry_functions: 
  severity: error # explicitly

missing_docs: 
  severity: warning # explicitly

strict_fileprivate:
    severity: error # explicitly

# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 300
# they can set both implicitly with an array
type_body_length:
  - 300 # warning
  - 400 # error
# or they can set both explicitly
file_length:
  warning: 500
  error: 1200
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 2 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string
identifier_name:
  min_length: 2 # only min_length
  excluded: # excluded via string array
    - id
    - GlobalAPIKey
    - APIKEY
function_body_length: 175
cyclomatic_complexity:
  warning: 15
  error: 20
  ignores_case_statements: true
large_tuple:
 warning: 3
 error: 4
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji)
